<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0303.2316                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DMA_Shapefile' inline='true' name='textscan.17ny4yd1hngpec1fp1aa000euoce' version='9.2'>
      <connection class='textscan' directory='C:/MDS/gitlocal/w205_Group_Project/Tableau_Visualization' filename='DMA_Shapefile.csv' password='' server='' username=''>
        <relation name='DMA_Shapefile#csv' table='[DMA_Shapefile#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PolygonID' ordinal='0' />
            <column datatype='string' name='NAME' ordinal='1' />
            <column datatype='integer' name='ID' ordinal='2' />
            <column datatype='integer' name='SubPolygonID' ordinal='3' />
            <column datatype='integer' name='PointID' ordinal='4' />
            <column datatype='real' name='Longitude' ordinal='5' />
            <column datatype='real' name='Latitude' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>PolygonID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PolygonID]</local-name>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias>PolygonID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SubPolygonID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SubPolygonID]</local-name>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias>SubPolygonID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PointID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PointID]</local-name>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias>PointID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DMA_Shapefile#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Point ID' datatype='integer' name='[PointID]' role='dimension' type='ordinal' />
      <column caption='Polygon ID' datatype='integer' name='[PolygonID]' role='dimension' type='ordinal' />
      <column caption='Sub Polygon ID' datatype='integer' name='[SubPolygonID]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.589986' measure-ordering='alphabetic' measure-percentage='0.410014' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='tweet_analysis (default.tweet_analysis)+ (default)' inline='true' name='hadoophive.0kn7ru913kkpl810732o21rztobp' version='9.2'>
      <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='default' server='ec2-52-90-159-34.compute-1.amazonaws.com' sslcert='' sslmode='' username='W205'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[tweet_analysis].[candidate]' />
                <expression op='[addata_analysis].[candidate]' />
              </expression>
              <expression op='='>
                <expression op='[tweet_analysis].[dma_name]' />
                <expression op='[addata_analysis].[dma_name]' />
              </expression>
              <expression op='='>
                <expression op='[tweet_analysis].[tweet_date]' />
                <expression op='[addata_analysis].[ad_date]' />
              </expression>
              <expression op='='>
                <expression op='[tweet_analysis].[five_minute_interval]' />
                <expression op='[addata_analysis].[five_minute_interval]' />
              </expression>
            </expression>
          </clause>
          <relation name='tweet_analysis' table='[default].[tweet_analysis]' type='table' />
          <relation name='addata_analysis' table='[default].[addata_analysis]' type='table' />
        </relation>
        <cols>
          <map key='[ad_count]' value='[addata_analysis].[ad_count]' />
          <map key='[ad_date]' value='[addata_analysis].[ad_date]' />
          <map key='[avg_bot_polarity]' value='[tweet_analysis].[avg_bot_polarity]' />
          <map key='[avg_non_bot_polarity]' value='[tweet_analysis].[avg_non_bot_polarity]' />
          <map key='[avg_polarity]' value='[tweet_analysis].[avg_polarity]' />
          <map key='[avg_subjectivity]' value='[tweet_analysis].[avg_subjectivity]' />
          <map key='[bot_tweet_count]' value='[tweet_analysis].[bot_tweet_count]' />
          <map key='[candidate (addata_analysis)]' value='[addata_analysis].[candidate]' />
          <map key='[candidate]' value='[tweet_analysis].[candidate]' />
          <map key='[con_ads_count]' value='[addata_analysis].[con_ads_count]' />
          <map key='[dma_name (addata_analysis)]' value='[addata_analysis].[dma_name]' />
          <map key='[dma_name]' value='[tweet_analysis].[dma_name]' />
          <map key='[five_minute_interval (addata_analysis)]' value='[addata_analysis].[five_minute_interval]' />
          <map key='[five_minute_interval]' value='[tweet_analysis].[five_minute_interval]' />
          <map key='[negative_tweet_count]' value='[tweet_analysis].[negative_tweet_count]' />
          <map key='[non_bot_tweet_count]' value='[tweet_analysis].[non_bot_tweet_count]' />
          <map key='[positive_tweet_count]' value='[tweet_analysis].[positive_tweet_count]' />
          <map key='[pro_ads_count]' value='[addata_analysis].[pro_ads_count]' />
          <map key='[tweet_date]' value='[tweet_analysis].[tweet_date]' />
          <map key='[tweetcount]' value='[tweet_analysis].[tweetcount]' />
        </cols>
        <connection-customization class='hadoophive' enabled='false' version='9.2'>
          <vendor name='hadoophive' />
          <driver name='hadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='yes' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='yes' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='yes' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='yes' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='yes' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='yes' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
            <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
            <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
            <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
            <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dma_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dma_name]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>dma_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[tweet_date]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>tweet_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>five_minute_interval</remote-name>
            <remote-type>3</remote-type>
            <local-name>[five_minute_interval]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>five_minute_interval</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweetcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweetcount]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>tweetcount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>positive_tweet_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>negative_tweet_count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_polarity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_polarity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_subjectivity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_subjectivity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_subjectivity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_bot_polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_bot_polarity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_bot_polarity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_non_bot_polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_non_bot_polarity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_non_bot_polarity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bot_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bot_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>bot_tweet_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_bot_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_bot_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>non_bot_tweet_count</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dma_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dma_name (addata_analysis)]</local-name>
            <parent-name>[addata_analysis]</parent-name>
            <remote-alias>dma_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate (addata_analysis)]</local-name>
            <parent-name>[addata_analysis]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ad_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ad_date]</local-name>
            <parent-name>[addata_analysis]</parent-name>
            <remote-alias>ad_date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>five_minute_interval</remote-name>
            <remote-type>3</remote-type>
            <local-name>[five_minute_interval (addata_analysis)]</local-name>
            <parent-name>[addata_analysis]</parent-name>
            <remote-alias>five_minute_interval</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ad_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ad_count]</local-name>
            <parent-name>[addata_analysis]</parent-name>
            <remote-alias>ad_count</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pro_ads_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pro_ads_count]</local-name>
            <parent-name>[addata_analysis]</parent-name>
            <remote-alias>pro_ads_count</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>con_ads_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[con_ads_count]</local-name>
            <parent-name>[addata_analysis]</parent-name>
            <remote-alias>con_ads_count</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ad Count' datatype='integer' name='[ad_count]' role='measure' type='quantitative' />
      <column caption='Ad Date' datatype='date' name='[ad_date]' role='dimension' type='ordinal' />
      <column caption='Avg Bot Polarity' datatype='real' name='[avg_bot_polarity]' role='measure' type='quantitative' />
      <column caption='Avg Non Bot Polarity' datatype='real' name='[avg_non_bot_polarity]' role='measure' type='quantitative' />
      <column caption='Avg Polarity' datatype='real' name='[avg_polarity]' role='measure' type='quantitative' />
      <column caption='Avg Subjectivity' datatype='real' name='[avg_subjectivity]' role='measure' type='quantitative' />
      <column caption='Bot Tweet Count' datatype='integer' name='[bot_tweet_count]' role='measure' type='quantitative' />
      <column caption='Candidate (Addata Analysis)' datatype='string' name='[candidate (addata_analysis)]' role='dimension' type='nominal' />
      <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
      <column caption='Con Ads Count' datatype='integer' name='[con_ads_count]' role='measure' type='quantitative' />
      <column caption='Dma Name (Addata Analysis)' datatype='string' name='[dma_name (addata_analysis)]' role='dimension' type='nominal' />
      <column caption='Dma Name' datatype='string' name='[dma_name]' role='dimension' type='nominal' />
      <column caption='Five Minute Interval (Addata Analysis)' datatype='integer' name='[five_minute_interval (addata_analysis)]' role='measure' type='quantitative' />
      <column caption='Five Minute Interval' datatype='integer' name='[five_minute_interval]' role='measure' type='quantitative' />
      <column caption='Negative Tweet Count' datatype='integer' name='[negative_tweet_count]' role='measure' type='quantitative' />
      <column caption='Non Bot Tweet Count' datatype='integer' name='[non_bot_tweet_count]' role='measure' type='quantitative' />
      <column caption='Positive Tweet Count' datatype='integer' name='[positive_tweet_count]' role='measure' type='quantitative' />
      <column caption='Pro Ads Count' datatype='integer' name='[pro_ads_count]' role='measure' type='quantitative' />
      <column caption='Tweet Date' datatype='date' name='[tweet_date]' role='dimension' type='ordinal' />
      <column caption='Tweetcount' datatype='integer' name='[tweetcount]' role='measure' type='quantitative' />
      <column-instance column='[con_ads_count]' derivation='Sum' name='[sum:con_ads_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[negative_tweet_count]' derivation='Sum' name='[sum:negative_tweet_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_tweet_count]' derivation='Sum' name='[sum:positive_tweet_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pro_ads_count]' derivation='Sum' name='[sum:pro_ads_count:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nchandhi\Documents\My Tableau Repository\Datasources\tweet_analysis (default.tweet_analysis)+ (default).tde' schema='Extract' tablename='Extract' update-time='12/06/2016 06:06:57 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[ad_count]' value='[Extract].[ad_count]' />
            <map key='[ad_date]' value='[Extract].[ad_date]' />
            <map key='[avg_bot_polarity]' value='[Extract].[avg_bot_polarity]' />
            <map key='[avg_non_bot_polarity]' value='[Extract].[avg_non_bot_polarity]' />
            <map key='[avg_polarity]' value='[Extract].[avg_polarity]' />
            <map key='[avg_subjectivity]' value='[Extract].[avg_subjectivity]' />
            <map key='[bot_tweet_count]' value='[Extract].[bot_tweet_count]' />
            <map key='[candidate (addata_analysis)]' value='[Extract].[candidate]' />
            <map key='[candidate]' value='[Extract].[candidate1]' />
            <map key='[con_ads_count]' value='[Extract].[con_ads_count]' />
            <map key='[dma_name (addata_analysis)]' value='[Extract].[dma_name]' />
            <map key='[dma_name]' value='[Extract].[dma_name1]' />
            <map key='[five_minute_interval (addata_analysis)]' value='[Extract].[five_minute_interval]' />
            <map key='[five_minute_interval]' value='[Extract].[five_minute_interval1]' />
            <map key='[negative_tweet_count]' value='[Extract].[negative_tweet_count]' />
            <map key='[non_bot_tweet_count]' value='[Extract].[non_bot_tweet_count]' />
            <map key='[positive_tweet_count]' value='[Extract].[positive_tweet_count]' />
            <map key='[pro_ads_count]' value='[Extract].[pro_ads_count]' />
            <map key='[tweet_date]' value='[Extract].[tweet_date]' />
            <map key='[tweetcount]' value='[Extract].[tweetcount]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9401' timestamp-start='2016-12-06 06:06:57.233' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9401.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9401.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ad_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[ad_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ad_count</remote-alias>
              <ordinal>1</ordinal>
              <family>addata_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>12</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ad_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[ad_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ad_date</remote-alias>
              <ordinal>2</ordinal>
              <family>addata_analysis</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2016-10-20#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-11-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-10-27#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_bot_polarity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_bot_polarity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_bot_polarity</remote-alias>
              <ordinal>3</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1360</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Count' datatype='integer'>4566</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_non_bot_polarity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_non_bot_polarity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_non_bot_polarity</remote-alias>
              <ordinal>4</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2405</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Count' datatype='integer'>6254</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_polarity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_polarity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_polarity</remote-alias>
              <ordinal>5</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6787</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>824.55863003103639</statistic>
                <statistic aggregation='Avg' datatype='real'>0.087709672378580614</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.13309319041322992</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.13308611155300562</statistic>
                <statistic aggregation='Var' datatype='real'>0.017713797334372276</statistic>
                <statistic aggregation='VarP' datatype='real'>0.017711913088299055</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>238.83146224005287</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_subjectivity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_subjectivity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_subjectivity</remote-alias>
              <ordinal>6</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7269</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3250.2568973044235</statistic>
                <statistic aggregation='Avg' datatype='real'>0.34573523000791656</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.17446775087779534</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.17445847141865636</statistic>
                <statistic aggregation='Var' datatype='real'>0.030438996096356457</statistic>
                <statistic aggregation='VarP' datatype='real'>0.030435758249734143</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1409.8548792801128</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bot_tweet_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[bot_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bot_tweet_count</remote-alias>
              <ordinal>7</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15545.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.6535474949473461</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>48</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.1164389830730514</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1162732282670373</statistic>
                <statistic aggregation='Var' datatype='real'>9.712191935217394</statistic>
                <statistic aggregation='VarP' datatype='real'>9.7111588332138616</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>116999.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate (addata_analysis)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate</remote-alias>
              <ordinal>8</ordinal>
              <family>addata_analysis</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;both&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;trump&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate1</remote-alias>
              <ordinal>9</ordinal>
              <family>tweet_analysis</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;both&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;trump&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>con_ads_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[con_ads_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>con_ads_count</remote-alias>
              <ordinal>10</ordinal>
              <family>addata_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dma_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dma_name (addata_analysis)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dma_name</remote-alias>
              <ordinal>11</ordinal>
              <family>addata_analysis</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Boston MA (Manchester NH)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Washington DC (Hagerstown MD)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dma_name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dma_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dma_name1</remote-alias>
              <ordinal>12</ordinal>
              <family>tweet_analysis</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Boston MA (Manchester NH)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Washington DC (Hagerstown MD)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>five_minute_interval</remote-name>
              <remote-type>2</remote-type>
              <local-name>[five_minute_interval (addata_analysis)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>five_minute_interval</remote-alias>
              <ordinal>13</ordinal>
              <family>addata_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1326260.0</statistic>
                <statistic aggregation='Avg' datatype='real'>141.07648122540155</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>287</statistic>
                <statistic aggregation='Stdev' datatype='real'>89.456990741657961</statistic>
                <statistic aggregation='StdevP' datatype='real'>89.452232770708576</statistic>
                <statistic aggregation='Var' datatype='real'>8002.5531925530786</statistic>
                <statistic aggregation='VarP' datatype='real'>8001.7019476650285</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>262328094.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>five_minute_interval1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[five_minute_interval]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>five_minute_interval1</remote-alias>
              <ordinal>14</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1326260.0</statistic>
                <statistic aggregation='Avg' datatype='real'>141.07648122540155</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>287</statistic>
                <statistic aggregation='Stdev' datatype='real'>89.456990741657961</statistic>
                <statistic aggregation='StdevP' datatype='real'>89.452232770708576</statistic>
                <statistic aggregation='Var' datatype='real'>8002.5531925530786</statistic>
                <statistic aggregation='VarP' datatype='real'>8001.7019476650285</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>262328094.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>negative_tweet_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[negative_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>negative_tweet_count</remote-alias>
              <ordinal>15</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>61</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>non_bot_tweet_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[non_bot_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>non_bot_tweet_count</remote-alias>
              <ordinal>16</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>86</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_tweet_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[positive_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>positive_tweet_count</remote-alias>
              <ordinal>17</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>90</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pro_ads_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[pro_ads_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pro_ads_count</remote-alias>
              <ordinal>18</ordinal>
              <family>addata_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>8</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tweet_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[tweet_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tweet_date</remote-alias>
              <ordinal>19</ordinal>
              <family>tweet_analysis</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2016-10-20#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-11-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-10-27#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tweetcount</remote-name>
              <remote-type>16</remote-type>
              <local-name>[tweetcount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tweetcount</remote-alias>
              <ordinal>20</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>114983.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12.230932879480907</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>116</statistic>
                <statistic aggregation='Stdev' datatype='real'>11.920372534155446</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.919738522372207</statistic>
                <statistic aggregation='Var' datatype='real'>142.09528135304754</statistic>
                <statistic aggregation='VarP' datatype='real'>142.08016644172395</statistic>
                <statistic aggregation='Count' datatype='integer'>9401</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2742045.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.365359' measure-ordering='alphabetic' measure-percentage='0.634641' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:positive_tweet_count:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:con_ads_count:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:negative_tweet_count:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:pro_ads_count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='tweet_analysis (default.tweet_analysis) (default)' inline='true' name='hadoophive.1qjvmxl1qwychz11oylqy1n66nld' version='9.2'>
      <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='default' server='ec2-52-90-159-34.compute-1.amazonaws.com' sslcert='' sslmode='' username='W205'>
        <relation name='tweet_analysis' table='[default].[tweet_analysis]' type='table' />
        <connection-customization class='hadoophive' enabled='false' version='9.2'>
          <vendor name='hadoophive' />
          <driver name='hadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
            <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
            <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
            <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
            <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dma_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dma_name]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>dma_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidate]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>candidate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[tweet_date]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>tweet_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>five_minute_interval</remote-name>
            <remote-type>3</remote-type>
            <local-name>[five_minute_interval]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>five_minute_interval</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweetcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweetcount]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>tweetcount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>positive_tweet_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>negative_tweet_count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_polarity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_polarity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_subjectivity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_subjectivity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_subjectivity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_bot_polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_bot_polarity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_bot_polarity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_non_bot_polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_non_bot_polarity]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>avg_non_bot_polarity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bot_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bot_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>bot_tweet_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_bot_tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_bot_tweet_count]</local-name>
            <parent-name>[tweet_analysis]</parent-name>
            <remote-alias>non_bot_tweet_count</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Avg Bot Polarity' datatype='real' name='[avg_bot_polarity]' role='measure' type='quantitative' />
      <column caption='Avg Non Bot Polarity' datatype='real' name='[avg_non_bot_polarity]' role='measure' type='quantitative' />
      <column caption='Avg Polarity' datatype='real' name='[avg_polarity]' role='measure' type='quantitative' />
      <column caption='Avg Subjectivity' datatype='real' name='[avg_subjectivity]' role='measure' type='quantitative' />
      <column caption='Bot Tweet Count' datatype='integer' name='[bot_tweet_count]' role='measure' type='quantitative' />
      <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
      <column caption='Dma Name' datatype='string' name='[dma_name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Five Minute Interval' datatype='integer' name='[five_minute_interval]' role='dimension' type='ordinal' />
      <column caption='Negative Tweet Count' datatype='integer' name='[negative_tweet_count]' role='measure' type='quantitative' />
      <column caption='Non Bot Tweet Count' datatype='integer' name='[non_bot_tweet_count]' role='measure' type='quantitative' />
      <column caption='Positive Tweet Count' datatype='integer' name='[positive_tweet_count]' role='measure' type='quantitative' />
      <column caption='Tweet Date' datatype='date' name='[tweet_date]' role='dimension' type='ordinal' />
      <column caption='Tweetcount' datatype='integer' name='[tweetcount]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nchandhi\Documents\My Tableau Repository\Datasources\tweet_analysis (default.tweet_analysis) (default).tde' schema='Extract' tablename='Extract' update-time='12/06/2016 08:05:37 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='909575' timestamp-start='2016-12-06 20:05:37.918' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_bot_polarity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_bot_polarity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_bot_polarity</remote-alias>
              <ordinal>1</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42115</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Count' datatype='integer'>237257</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_non_bot_polarity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_non_bot_polarity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_non_bot_polarity</remote-alias>
              <ordinal>2</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63616</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>34671.634471917023</statistic>
                <statistic aggregation='Avg' datatype='real'>0.091652373073704441</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.21773228907035919</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.21773200128908668</statistic>
                <statistic aggregation='Var' datatype='real'>0.047407349703818456</statistic>
                <statistic aggregation='VarP' datatype='real'>0.047407224385350846</statistic>
                <statistic aggregation='Count' datatype='integer'>378295</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>21111.653526551549</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_polarity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_polarity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_polarity</remote-alias>
              <ordinal>3</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>214542</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>83444.496417002971</statistic>
                <statistic aggregation='Avg' datatype='real'>0.09174009445840417</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.19962182258182506</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.19962171284822564</statistic>
                <statistic aggregation='Var' datatype='real'>0.039848872050889647</statistic>
                <statistic aggregation='VarP' datatype='real'>0.039848828240459447</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>43900.703930145726</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_subjectivity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_subjectivity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_subjectivity</remote-alias>
              <ordinal>4</ordinal>
              <family>tweet_analysis</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>230105</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>313785.94442071038</statistic>
                <statistic aggregation='Avg' datatype='real'>0.34498083656730932</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.25216303326451384</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.25216289464862035</statistic>
                <statistic aggregation='Var' datatype='real'>0.063586195345160301</statistic>
                <statistic aggregation='VarP' datatype='real'>0.063586125437571209</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>166086.48765419872</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bot_tweet_count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[bot_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bot_tweet_count</remote-alias>
              <ordinal>5</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1489</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>2436</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>candidate</remote-alias>
              <ordinal>6</ordinal>
              <family>tweet_analysis</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;both&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;trump&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dma_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dma_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dma_name</remote-alias>
              <ordinal>7</ordinal>
              <family>tweet_analysis</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>211</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zanesville OH&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>five_minute_interval</remote-name>
              <remote-type>2</remote-type>
              <local-name>[five_minute_interval]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>five_minute_interval</remote-alias>
              <ordinal>8</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>126701389.0</statistic>
                <statistic aggregation='Avg' datatype='real'>139.29735206002803</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>287</statistic>
                <statistic aggregation='Stdev' datatype='real'>88.051976190702788</statistic>
                <statistic aggregation='StdevP' datatype='real'>88.051927787877077</statistic>
                <statistic aggregation='Var' datatype='real'>7753.1505110880908</statistic>
                <statistic aggregation='VarP' datatype='real'>7753.141987161519</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24701232113.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>negative_tweet_count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[negative_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>negative_tweet_count</remote-alias>
              <ordinal>9</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1183</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>2116</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>non_bot_tweet_count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[non_bot_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>non_bot_tweet_count</remote-alias>
              <ordinal>10</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2235</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9585450.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10.538383310886953</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3385</statistic>
                <statistic aggregation='Stdev' datatype='real'>108.35091352327757</statistic>
                <statistic aggregation='StdevP' datatype='real'>108.35085396197515</statistic>
                <statistic aggregation='Var' datatype='real'>11739.920461328775</statistic>
                <statistic aggregation='VarP' datatype='real'>11739.907554289266</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10779341560.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_tweet_count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[positive_tweet_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>positive_tweet_count</remote-alias>
              <ordinal>11</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2840</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5272</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tweet_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[tweet_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tweet_date</remote-alias>
              <ordinal>12</ordinal>
              <family>tweet_analysis</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2016-10-20#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-11-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-10-25#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tweetcount</remote-name>
              <remote-type>2</remote-type>
              <local-name>[tweetcount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tweetcount</remote-alias>
              <ordinal>13</ordinal>
              <family>tweet_analysis</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5227</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>12884</statistic>
                <statistic aggregation='Count' datatype='integer'>909575</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.410014' measure-ordering='alphabetic' measure-percentage='0.589986' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='hadoophive.1qjvmxl1qwychz11oylqy1n66nld'>
      <column caption='Dma Name' datatype='string' name='[dma_name]' role='dimension' type='nominal' />
      <column-instance column='[dma_name]' derivation='None' name='[none:dma_name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.17ny4yd1hngpec1fp1aa000euoce'>
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='textscan.17ny4yd1hngpec1fp1aa000euoce' target='hadoophive.0kn7ru913kkpl810732o21rztobp'>
      <column-mapping />
    </datasource-relationship>
    <datasource-relationship source='textscan.17ny4yd1hngpec1fp1aa000euoce' target='hadoophive.1qjvmxl1qwychz11oylqy1n66nld'>
      <column-mapping>
        <map key='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]' value='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[none:dma_name:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Con Ads - Negative Tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweet_analysis (default.tweet_analysis)+ (default)' name='hadoophive.0kn7ru913kkpl810732o21rztobp' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.0kn7ru913kkpl810732o21rztobp'>
            <column caption='Con Ads Count' datatype='integer' name='[con_ads_count]' role='measure' type='quantitative' />
            <column caption='Negative Tweet Count' datatype='integer' name='[negative_tweet_count]' role='measure' type='quantitative' />
            <column-instance column='[con_ads_count]' derivation='Sum' name='[sum:con_ads_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[negative_tweet_count]' derivation='Sum' name='[sum:negative_tweet_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tweet_date]' derivation='Day-Trunc' name='[tdy:tweet_date:qk]' pivot='key' type='quantitative' />
            <column caption='Tweet Date' datatype='date' name='[tweet_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:negative_tweet_count:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:con_ads_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:negative_tweet_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:con_ads_count:qk] + [hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:negative_tweet_count:qk])</rows>
        <cols>[hadoophive.0kn7ru913kkpl810732o21rztobp].[tdy:tweet_date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hillary Bot Tweets - Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='DMA_Shapefile' name='textscan.17ny4yd1hngpec1fp1aa000euoce' />
            <datasource caption='tweet_analysis (default.tweet_analysis) (default)' name='hadoophive.1qjvmxl1qwychz11oylqy1n66nld' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='hadoophive.1qjvmxl1qwychz11oylqy1n66nld'>
            <column caption='Bot Tweet Count' datatype='integer' name='[bot_tweet_count]' role='measure' type='quantitative' />
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[bot_tweet_count]' derivation='Sum' name='[sum:bot_tweet_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.17ny4yd1hngpec1fp1aa000euoce'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='Point ID' datatype='integer' name='[PointID]' role='dimension' type='ordinal' />
            <column caption='Polygon ID' datatype='integer' name='[PolygonID]' role='dimension' type='ordinal' />
            <column caption='Sub Polygon ID' datatype='integer' name='[SubPolygonID]' role='dimension' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointID]' derivation='None' name='[none:PointID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PolygonID]' derivation='None' name='[none:PolygonID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonID]' derivation='None' name='[none:SubPolygonID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[none:candidate:nk]'>
            <groupfilter function='member' level='[none:candidate:nk]' member='&quot;clinton&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[none:candidate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]' field-type='quantitative' max='-5529724.3581438474' min='-14496625.56838857' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]' field-type='quantitative' max='7154070.6413609143' min='2464317.3836373296' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]' />
              <path column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Bot Tweet Count:&#9;</run>
                <run bold='true'>&lt;[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='219' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</rows>
        <cols>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pro Ads - Positive Tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweet_analysis (default.tweet_analysis)+ (default)' name='hadoophive.0kn7ru913kkpl810732o21rztobp' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.0kn7ru913kkpl810732o21rztobp'>
            <column caption='Positive Tweet Count' datatype='integer' name='[positive_tweet_count]' role='measure' type='quantitative' />
            <column caption='Pro Ads Count' datatype='integer' name='[pro_ads_count]' role='measure' type='quantitative' />
            <column-instance column='[positive_tweet_count]' derivation='Sum' name='[sum:positive_tweet_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pro_ads_count]' derivation='Sum' name='[sum:pro_ads_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tweet_date]' derivation='Day-Trunc' name='[tdy:tweet_date:qk]' pivot='key' type='quantitative' />
            <column caption='Tweet Date' datatype='date' name='[tweet_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:pro_ads_count:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:positive_tweet_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:pro_ads_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:positive_tweet_count:qk] + [hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:pro_ads_count:qk])</rows>
        <cols>[hadoophive.0kn7ru913kkpl810732o21rztobp].[tdy:tweet_date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sentiment-Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='DMA_Shapefile' name='textscan.17ny4yd1hngpec1fp1aa000euoce' />
            <datasource caption='tweet_analysis (default.tweet_analysis) (default)' name='hadoophive.1qjvmxl1qwychz11oylqy1n66nld' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='hadoophive.1qjvmxl1qwychz11oylqy1n66nld'>
            <column-instance column='[avg_polarity]' derivation='Avg' name='[avg:avg_polarity:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Polarity' datatype='real' name='[avg_polarity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.17ny4yd1hngpec1fp1aa000euoce'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='Point ID' datatype='integer' name='[PointID]' role='dimension' type='ordinal' />
            <column caption='Polygon ID' datatype='integer' name='[PolygonID]' role='dimension' type='ordinal' />
            <column caption='Sub Polygon ID' datatype='integer' name='[SubPolygonID]' role='dimension' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointID]' derivation='None' name='[none:PointID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PolygonID]' derivation='None' name='[none:PolygonID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonID]' derivation='None' name='[none:SubPolygonID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]' field-type='quantitative' max='-5529724.3581438474' min='-14496625.56838857' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]' field-type='quantitative' max='7154070.6413609143' min='2464317.3836373296' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[avg:avg_polarity:qk]' num-steps='7' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[avg:avg_polarity:qk]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]' />
              <path column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg. Avg Polarity:&#9;</run>
                <run bold='true'>&lt;[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[avg:avg_polarity:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</rows>
        <cols>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trump Bot Tweets- Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='DMA_Shapefile' name='textscan.17ny4yd1hngpec1fp1aa000euoce' />
            <datasource caption='tweet_analysis (default.tweet_analysis) (default)' name='hadoophive.1qjvmxl1qwychz11oylqy1n66nld' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='hadoophive.1qjvmxl1qwychz11oylqy1n66nld'>
            <column caption='Bot Tweet Count' datatype='integer' name='[bot_tweet_count]' role='measure' type='quantitative' />
            <column caption='Candidate' datatype='string' name='[candidate]' role='dimension' type='nominal' />
            <column-instance column='[candidate]' derivation='None' name='[none:candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[bot_tweet_count]' derivation='Sum' name='[sum:bot_tweet_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.17ny4yd1hngpec1fp1aa000euoce'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='Point ID' datatype='integer' name='[PointID]' role='dimension' type='ordinal' />
            <column caption='Polygon ID' datatype='integer' name='[PolygonID]' role='dimension' type='ordinal' />
            <column caption='Sub Polygon ID' datatype='integer' name='[SubPolygonID]' role='dimension' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointID]' derivation='None' name='[none:PointID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PolygonID]' derivation='None' name='[none:PolygonID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonID]' derivation='None' name='[none:SubPolygonID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[none:candidate:nk]'>
            <groupfilter function='member' level='[none:candidate:nk]' member='&quot;trump&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[none:candidate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]' field-type='quantitative' max='-5529724.3581438474' min='-14496625.56838857' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]' field-type='quantitative' max='7154070.6413609143' min='2464317.3836373296' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]' />
              <path column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Bot Tweet Count:&#9;</run>
                <run bold='true'>&lt;[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='219' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</rows>
        <cols>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tweets-Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='DMA_Shapefile' name='textscan.17ny4yd1hngpec1fp1aa000euoce' />
            <datasource caption='tweet_analysis (default.tweet_analysis) (default)' name='hadoophive.1qjvmxl1qwychz11oylqy1n66nld' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='hadoophive.1qjvmxl1qwychz11oylqy1n66nld'>
            <column-instance column='[tweetcount]' derivation='Sum' name='[sum:tweetcount:qk]' pivot='key' type='quantitative' />
            <column caption='Tweetcount' datatype='integer' name='[tweetcount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.17ny4yd1hngpec1fp1aa000euoce'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='Point ID' datatype='integer' name='[PointID]' role='dimension' type='ordinal' />
            <column caption='Polygon ID' datatype='integer' name='[PolygonID]' role='dimension' type='ordinal' />
            <column caption='Sub Polygon ID' datatype='integer' name='[SubPolygonID]' role='dimension' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointID]' derivation='None' name='[none:PointID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PolygonID]' derivation='None' name='[none:PolygonID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonID]' derivation='None' name='[none:SubPolygonID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]' field-type='quantitative' max='-7159751.7961378805' min='-14414775.779514665' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]' field-type='quantitative' max='7020288.1549924985' min='2309875.3076695502' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:tweetcount:qk]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]' />
              <lod column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]' />
              <path column='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Tweetcount:&#9;</run>
                <run bold='true'>&lt;[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:tweetcount:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='170' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</rows>
        <cols>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ads-Tweets'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86700' x='0' y='0'>
              <zone h='50000' id='1' name='Pro Ads - Positive Tweets' show-title='true' w='86700' x='0' y='0' />
              <zone h='50000' id='7' name='Con Ads - Negative Tweets' show-title='true' w='86700' x='0' y='50000' />
            </zone>
            <zone fixed-size='133' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13300' x='86700' y='0'>
              <zone h='8750' id='6' name='Pro Ads - Positive Tweets' pane-specification-id='1' param='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' type='color' w='13300' x='86700' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Candidate-Bots'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='50000' id='1' name='Trump Bot Tweets- Markets' show-title='true' w='99600' x='0' y='0' />
              <zone h='50000' id='7' name='Hillary Bot Tweets - Markets' show-title='true' w='99600' x='0' y='50000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5083' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5083' />
            <zone h='83195' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='16390'>
              <flipboard active-id='4' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Ads &amp; Tweets' captured-sheet='Ads-Tweets' id='1' />
                  <story-point caption='Markets and Sentiment' captured-sheet='Sentiment-Markets' id='2' />
                  <story-point caption='Candiate - Bots' captured-sheet='Candidate-Bots' id='3' />
                  <story-point caption='Tweets-Markets' captured-sheet='Tweets-Markets' id='4'>
                    <currentDeltas>
                      <worksheet name='Tweets-Markets'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]' field-type='quantitative' max='8470321.0667499471' min='881979.34095614695' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]' field-type='quantitative' max='-6787586.8374405596' min='-14875290.418259332' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='80'>
    <window class='worksheet' name='Pro Ads - Positive Tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]</field>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[yr:tweet_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Con Ads - Negative Tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]</field>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[yr:tweet_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Ads-Tweets'>
      <viewpoints>
        <viewpoint name='Con Ads - Negative Tweets'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pro Ads - Positive Tweets'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Story'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='Sentiment-Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[avg:avg_polarity:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[avg:avg_polarity:qk]</field>
            <field>[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[avg:avg_polarity:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tweets-Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:tweetcount:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[avg:avg_polarity:qk]</field>
            <field>[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[avg:avg_polarity:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trump Bot Tweets- Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[none:candidate:nk]</field>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:bot_tweet_count:qk]</field>
            <field>[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[none:candidate:nk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hillary Bot Tweets - Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[sum:bot_tweet_count:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[none:candidate:nk]</field>
            <field>[hadoophive.0kn7ru913kkpl810732o21rztobp].[sum:bot_tweet_count:qk]</field>
            <field>[hadoophive.1qjvmxl1qwychz11oylqy1n66nld].[none:candidate:nk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Latitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:Longitude:qk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:NAME:nk]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PointID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:PolygonID:ok]</field>
            <field>[textscan.17ny4yd1hngpec1fp1aa000euoce].[none:SubPolygonID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Candidate-Bots'>
      <viewpoints>
        <viewpoint name='Hillary Bot Tweets - Markets'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trump Bot Tweets- Markets'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Pro Ads - Positive Tweets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAffElEQVR4nO2dd3hc5Z3vP9NHM+rFsq3eLFu2ce8EY3AMmBaHEpoJeMkmWcJyk3vTN9kE
      NslyeXKfZClhjWFNQgkEQmgmdDCxLVuu2JYl25LVLVsa9dFI08794yDhsaXR9KLzfp4nT/Do
      nO/7mxl9dd7feX/v76gkSZIQCBSKOtoBCATRRDvyH1arNSCB4eFhDAaDX+e43W7U6tB6T8ma
      4dJVguaoAcxmc8AB+Huu0+lEq9VOfKDQjKquEjTFFEigaIQBBIpGGECgaIQBBIpGGECgaIQB
      BIpGGECgaCaNAVQNn4LkjnYYUaG1x8YT209FO4y4ZHIY4Gw16hdvg1OfRjuSqPBJbQfP726K
      dhhxSfwbQHLDOz/BdeXDcPydaEcTFfY2dJFm1tFkGYx2KHGH1/XjhtrDtA9I6KRBktKn09VW
      D4ZkBruaySyYz0UzCyIV5/gc/gvkLIF5t8AzV0c7mqjQYLFyy+JcKust5GeYoh1OXOHVAJ3d
      vQz1WzHlFlFfX0dWajKohknJzMVh7cZqzcTpdOJ0Ov0a1OVyBRX0KMP9aHZvxnXHq7hcLtRT
      5yI17UGavjAk8iGLM4yabb1D5KQaWVKQyhOfNvLVBdNCph0P7z9YTa8GmF1RQXVdG+mJejS5
      eSQZJFSGFAYtzWQUzMRsNmK1WgMqRApJQdT7D8HF30WbkAxOJ+qZ66H2LchfGrz254SjcC2U
      mgeae1lRkkVpdjINlsGQxxvr7z9YTa9nJSSns2hBOgC55/5g+pSABgsp7Z9BVwNc+Z9fvFZ4
      Mbz/y6iFFA0q6y1840vFABRmmGiyDIppkB/EZxIsueG9n8MVv/Z8XaOH7Ao4Ux2duKJAfYeV
      4qxEAFaWZFJZb4lyRPFFfBrg0AuQtwIyii/8WcX1irkbdKZviOxk4+i/lxdnCAP4SfwZwNYN
      e7bAqvvH/nnJZVD3YWRjihKV9RaWFKaN/js/w0RTl7gV6g/xZ4APH4RLfww649g/1+gheSp0
      N0Y2rihQWW9haVGGx2v56SaxHuAH8WWAtgMw0AEz1nk/rnQtVL8WmZiiSG17P2VTEj1eE9Mg
      /4gfA4wkvuv+Y+JjZ1wx6fOAM31DpJv1qNUqj9eFAfwjfgxw8DkovATSfFh9NqaCPgGsHeGP
      K0pUNXSxuDD9gtfzM0y09tiiEFF8Eh8GsHVD1dPjJ75jMXsD1GwLX0xRprK+i+XFGWP+LD9D
      5AG+Eh8G+OCXsOanoNX7fk75eqh5K3wxRZma033MmZ485s/ENMh3vBpguL+LPfs+40x7K7V1
      jTSfOklz21lqD++ns28oMhG2VMFgN5St9e+8hDTADUM9YQkrmvQM2klO0KHVjP31CQP4jlcD
      HDlyFI1WTWNzOwPdnZy19HD2dB0DdonGEzXhj268FV9fKb4Ujk2+q8C+xm6WFl04/x8hJzVB
      5AE+4rUWKDU9jcaGVnQpaTjtLhLUw5+XQzeRWbAAq9Ua3mrQqqdQl67Dbc6GCcYYS1NVfg2q
      d36Ce+7X/IrPm2awhEKzsq6Tq+ZM9fjcz9fNS0+g/mwf+emB1wXF6vsPpaZXA5SUz6GkfM4Y
      P/mi3Dhs1aDWDjj6Mtz1Fmof9S/QTC8EmwU1TtCOs3AWbJxR0Kxu7+eHV826YAp0ru6Kkkz2
      NvZSPGXsPMFXYvH9h1IzdpPgD/8D1vzEv8R3LMqvgpOTpzSif8hBgk4z7vx/BJEH+EZsGqB5
      NwwPQMma4LUqvgJHXw1eJ0bY29DNgvy0CY8TeYBvxJ4BRhLfLz8QGr20QuhtAZc9NHpRprLe
      wvLi8RPgcxHrARMTewbY/QTMvBZSckKnWbAc6reHTi+KHGjqYW5Oqk/HimnQxMSWAfpPQ/Ub
      sOxbodWddd2kmAb1DznQaVXotb59bcIAExNbBvjgAbjs30AT4rsE0xfA2eq4b5y1t6GbRT7M
      /0cQecDExI4BGneAywmFq8KjX7gKWvaFRztCjFcA5w2RB3gnNgzgdsL7v/Ct1DlQKq6P+z0C
      B5p7WFTg+xUAxDRoImLDALufgNk3QFJ2+MbIXSLXFcUpww4XbreE2eDf9HB5cQb/ONkZpqji
      n+gboK9VrtdZck/4x8qaAa0Hwj9OGDjY4v9ff5DzgDaRB4yL1z8n7bUHOWkzYXJ2kRiu1ojv
      /RzW/iL0ie9YVFwP1X+DnAXhHyvEeKv/n4iiLDP1HQOj7VMEX+D1t05lTsXeWENyXnFYWiOq
      Tn2CSqXFPX3RhMVuvmp6JW8lmo9+g8vHsWKpcOtgUzd3Lc8b97P2pru0IJWdJzvIT/OvHiqW
      3n+4NL0aQG8wkJqdR0ZSGFojqtyw/f/CLc/7XOw2oeZEOlotZM1A29s0dk+hQDQDwF9Nu9ON
      0y2RYvb+Czye7sqyKTz0dg13rCjya1xvmsEQS5pez0rLmkZaltxs1WNdNhStESsfh7k3gTmw
      y3rAzLpWvhv0pe9GdtwgONzay9yclIDPF3nA+EQnCe5rhePvwaK7Ij926dq4a5wlN8Dy7/7/
      +YzkAQJPomIA9YcPRC7xPR+NHgzmuGqctedUF4sL/b8DdC7LizPYIW6HXkBUDCBd/D3IWxKN
      oWVmb4ibDfN2pxub3UWSUReUjrwg1hWiqCYP0TFAZnk0hv2CGVfA8b9HNwYfOdzaS8U43R/8
      QdQFjU30F8KigTEV9Ca520SMU9XQ5XP9/0SUZSdy4kx/SLQmC8o0AMDMq+HY69GOYkL2nOpi
      YQArwGMh6oIuRMEGuCbm8wC3W6Jn0M6UpMA29J+PyAMuRLkGSEgDhxWG+6IdybhUn+4Lyfx/
      hJE8wO2WQqYZ7yjXACAnwzHcOEue/4d2obAsO5FakQeM4tUAtp4z7Dt8nI5otkYMJzF+O3T/
      BB3gAkHkAZ54NUBz3SkG7cOcilZrxHCTkidPgZyxZ2a3W6LTGrr5/wgiD/DE61JsVn4BrQcP
      o0pKxRGN1ogR0FQXrcZ9/AN5OhQiTW/4qnni7ADFmSafP1tfdbMTdZzusWF3OFCrVF6PjaXv
      KVyaExbDrfnyWE8ej0BrxAAISHPOBtSfPAwVV4dOcwJ80dzb2MOy4ky/xvf12PJpSdR12pg1
      beIEO2a+pzBpKjsJBkgvho4aeV9yDFFZ38WyEM//RxB5wBcIAwAUXwJ1H0c7ilHcbonTvTaP
      ZwCHkuXFGeysEwYAYQCZWddBzZvRjmKUuo4BijLDt30xJzWBs31DYj0AYQCZnEXQURszjbMq
      6y1hm/6MUDE9merTsbsIGCmEAUbIWRAzjbOqGrqDrv+fCJEHyAgDjFBxPRx7I9pRANBosYa9
      g4MwgIwwwAi5S6D+42hHQZNlkIIMc9jHyU420tE/rPg8QBhgBJUaps+DtoNRDaOqMfT1P+Mh
      8gBhAE9mXRv12iB/HoARLGIaJAzgSfGl0FQZ1RCaLIMR6+C2qjRT8QaYYP3YzSsvv0pJYQ6m
      cLVGjCU0ekiZDpZ6nxtnhZIzfUNhW/wai8xEA11WO263hFrtvS5osuLVAKeOHqBvyInRnBqW
      1oihJFSaqhnrUVW/hnvFfRGPc8eJDpYWpvr9eU6k641ZU5M43NLN7DE23sTy9xQqTa8GKJq9
      CF1KNhqc5IW6NWIMFUR5ULoGnt+M+vPOcZGMs6qxm02rigJv8xfAeStKM6lq7GFe/th5R8x+
      TyHSnPCs3NxcADxqQkPRGjFWMSTLjbN6m8E8ViVs+DhxZoCy7KSIjrm8OIMfvfIZ93wp8lO+
      WCAqSfAv3zzG9uMd0RjaN2ZviPhWyTN9Q2QkBvlQ8AA4Nw9QIlExwP9eW8YfdzXwxCd10Rh+
      Ysqvinj/0Mp6C0uLgrj/H0Qd05ycFMWuB0TFAIlGLZs3LmbY6ebe5/ZjHY6tWnyMqaBWgy1y
      jbPkBrgB1v807kDzyHx47V5o+NTv01eWKHc9IGrrAGq1ivsvL+PGRblsfGo3DZ3WaIUyNuVX
      Qe22iA1Xc7qfCh92aI3Jzkdw3/kGLL8Xat6G/14NH/0KOo/7dPrSogx2n1LmPuEotGf2ZM3M
      KRRkmPjeSwe5//IyVpfHSIJduhbNm9+DxV8P+1BdVjspJh1aTQB/jzpqQGdGSi2QHwBy5a/l
      6VDdx/Dhr8DWJec0s64Fc9aYEulmPb2DDkWuB8TESnBxViLPbFrKX/a18MiHJ6IdjkxyDqrh
      vog0ztpzKoj6n52PwLJveb6mUkPpZXDzM3DbiyABr34bXrpTbgfpsl8go9S6oJgwAECSUcej
      ty1ErVLxzT/tjYm8wD37Bjj0UtjHCbgB1sAZ6Gn23mpeZ4Ilm+COl2Hdg9B+FJ65Hrb9Hzj9
      ReHf8uJ0ReYBMWOAEe5dU8qtS/O5fctu6s5G94km7nm3wcHnxvyLGUpq2vuYE0gLxKotsPxf
      fD8+tQDW/Bg2vQ0VG2DvVnjqCvj0tyzNcioyD4g5AwBcWj6FR29bwA9f+Yxth09HLxCNHi66
      CQ6+ELYh+occJOg0/s//7QPyPL9sXWADF66Ca38Hd74KqYWkf/hD7j/9IzjyCjgGA9OMQ1SS
      JI2ugDTX7ONgUz8506aycO5MAOpOniQlMQGL1YlJ7ZCL4SwtZBRUkJksl0KYzf5t4HA6nT4t
      XQ87XPzwlc+YnprA9748w+svia+a/uB0OtHihK3Xyn811cHrnx/nRzVnqT3Tz7dWl/gntPsJ
      0Bhg8d1j6gbCE2/tZI1rF+Vn/w6ZpbgW3o0mf2lQmucTtu8pFH2B8opK0KvAYDAAMNxnYc/B
      ahpbotMa0aDT8LtbFpCVZOCf/7SPnsHwTkXGRGuEimvh0IthkZfr//2c/0tuOPwKzLs1pLGU
      FJXwadoGuOc9WHk/qh2/g71Ph3SMWMPTNioNw7YBhu3yL5qlpxedNIzT6WDQLkWtNeLGZXnM
      mprEpq17eODaCmaOcb88rFWGC+5G/ewGOSkO8ipwfpwHmrr57tpS/z7DI39FXXI5bpV29AHj
      oXj/i/JTeHFPI3etyIf0UlwbnsLwzg9w9v0GLvl+0PoQe9WgSOfisEkHDhyQ3v/4H5KvDAwM
      +Hzs6DAOh9/nSJIktfUMSjc/sVN6/WBryDS94aH56f+TpP3PhlSzz2aX7thS6b/IM9dJ0kDn
      uLrBcMvmXZLL5fbUfOffJGnb90OiH/bvyU/Om1RLHN6/B3NqZnCWDBPTUhL446albD/RwW+2
      HcPpimAfn6XfgH1bQ9pCcW9DN4v9ff5v0y5ILwnbA8Yrpo2xHrDuQUjJh7/cHXMtJIPF0wAu
      G1PyZ+G0xe6CiEGn4eEb55GXbuLurVV0WSOUF+gTofxKee4dIirrLSzx9/lfOx+BFd8JWQzn
      M+4+4ZXfke84vXTXpLpL5GGANssQlyytoKAw9mvD71hewL9eXsamrVUcae2NzKBL/gn2bA7Z
      X8FDLT3+PQDPchLUurBu11xWlD7+esD8W2HezfDCbTH9aCl/8DDA2Y4OEpIz6GxvjlY8frGk
      MJ0n71zMr7Yd4y/7WsI/oDEVytbC0deClrLZXbjdYNRpfD9p5yOw9J+DHtsbyQk6Boad4+8P
      mHUdrP4+/HGDvBIdx9idbk8DZCQlsHdvFZlT86IVk99kJRn406alfHy8k/1NEShfXv5t+R58
      kH1EDzT52f5w0AJdDfICVpgZMw84l4JVcM1v4c93yFelOORIay+3PVnpaYDMrExy8kvQa+Jr
      d5BWo+YH68p49MMIfBnGVLnQ7MirQcns8bf+Z89meQoWAXzqFzRtPmz4g1xkd+ZIROIKBTa7
      i4feruF37x/nsdsXehrA2tfDtrffpv1MZ7TiC5iCDDPpZj1VDRGoZ1n+bah8PKirwIGmHhb5
      Ov93DsHxd6F8fcDj+YPXPOBcMkrhlmfh9fvlu1MxTlVDFxuf2k1pdiJbvr6E7GTjeVeAzDQk
      NFht8Znlf2dNKY9E6ipQcmnAVwG7041bkjAbfFxUO/RnWLARNJHZvjGaB0g+zAQSs2HjK/Dx
      QxHdQOQPNruLX711jM3b63n8joXcsDB39Geet0G1JnKmZjF9SmR6U4aawkwz01KM7D4VgbLe
      Fd+RqzED4HBrL3NzUnw7WHLDgefgopsDGitQKqYlU93m450eY6p8Jdi7FT4LT8lIoOw+ZWHj
      U7uZk5PMk3cuvuCpm54GcDuw2az0DNgiGWNI+dfLI5QLJKRB/jI45v+TZfyq/6l5E4ouAUNk
      2iWOsLw4g90NftxU0CfCrc9D7d9h16PhC8xHbHYXP331MC/sbuKJjYu4fn7OmMedVwukpayk
      EJ0xAYBeyxk+3fMZ07OSSIyT1og5qQnkp5vYVWdhRUmYr2Qr75PvhMy6xq/T9pzq4q6Vhb4d
      vPdp2PCk/7EFybKidP7rgxOkJOhJTtCRbtaTaNCSatKRbNSRnKC78CS1Fm58Ct7+EXzwS7j8
      3yMeN8gVtr//4AT3XVbK5bOyvR7raQBJ4nRrC6nT5DeXkpFNtgk05vS4ao34L6uL+OFfj7Ck
      wMdphg+aY6JPQZW7BI69hVR24XOGx2LI7mTY6cKgYcLPTdW2H1XiNNzGtNGit4Bj9ROTTsXP
      1s+gscvG6W4r1a3dDAy76Bty0jfkpH/IiSSBSiX/z6DVkGzUkpygIyVhEyUHH+Hqvvv4pPj7
      mBMMJBt1pJp0mPVqUkwhDXX0vfcMOnjoneO4JTdbNi4g1aSf+DOWpC8ynZaWZlwOO+nZOSSZ
      jPT39eJ0SaBWoZIk5Ocqq5GcQ6iNKSSbDWHdDxCM5mMfnSQv3cR186aHTHNMhvvghdvlRFAz
      cWOr96rbOdzSy/fWlU8cwLNfheseg+SJO9RFu85+yOGib8hB76CDviEHdqfERUNVNL3zX3Sv
      /jX9xqn0Djrosg5hc3gm14N2Jz02+Vyr3YlZryXFpCM1QU9ygpbUBPmKk2bSk2TUkvL5v9NN
      etRqFf2Dwzz6cT09Ngcblxcwx9f8ivOuAIf27cackkn3oJv5s8tISh5PKMD2HRFk06oibt9S
      yZWzp6LXhnHjmyEZ5myA/c/Ke2+9YLO72PxJPX/YuGhi3aZdkFro0y9/LGDUaTDqNOclmVcy
      a0oh/PWbcMOTkDljQlO53RL9w056B+10DToYGHLSY7PTZ3PS0t1Ln81Bj01+vWtQ7mjndLm5
      c2XhuPN8r5xbGjo0NOR3OWkky6H91Xzq03rpT7saQqo59oE2SfrvSyXJOez1sIfePia9UFnv
      m+YLt0pSZ51vx0qxV2bsQU+TJG1ZJ0lNlTEXp8efRoMW3vtwO42Njf47KQa5fVk+L+9rwe4M
      c9m01jjh3uHqtl6qT/dx4yIfykwiUPQWUVLy5Nuk7z8QE89hO5fzyqHt9PX20B3Ht0HPxaDT
      cNOiXF6sagr/YIs3wYFnx6wUdbslHnzrGA9eP8c3rQgUvUUccxbc/iKaykfhxPvRjmYUTwOo
      dUzPSmHIHhsPjA4FNy3O45X9rZG5Coyzd/jpHadYU55FXroPtz8GLdDdGJGit4ijT8T1tefh
      0AvQvDva0QDnGaC95RT1rZ1kpMV+kusreq2amxbl8tzuCEzrltxzwa6xlu5B3qs+w6ZVRb5p
      VG2RryaTFY0ervpPeTp0MvpXAg8DDA8Pk5GeTk9PhDaYRIibFufxtwOtDDtCv/7ggc4EM9eP
      XgXcbolfvH6UX1w327e+P84heSU1QkVvUePz6RA7H4WjwVXVBovHt6LTG0lMNJGcFNmnlIQb
      vVbN15bk8+zuCOQC5+wdfu1QG6VTkpjla9fnQ3+G+bdHrOgtqugT4faX4Ojf5P0VUcLDANOn
      Z9PR3kG7ZfL1iLxxUS5vHGoLf89RfSLMWEdn5fNs3XGK/7W2zLfzolT0FlU0erjpf+BsDWx/
      OCoheF6X9UlgHyApISEqwYQTvVbNLUvyeGZXQ/gHW/oNOj54lJ+sL/d9y2PtNrnozTh58i+f
      UKnlFo1DffD2DyI+vKcB7H2YMnIYtPYDcjHc9p27qT9xjH2HjlD92X6qa+vYu/MjGlrj7yrx
      1YW5vHv0TNivAp80OtinW8gy63bfT6racmGbcyURpdYrHrVAtUcO4jakUl5agFou/OEfH76L
      OyEd08i0VDUEyLfzKipm4nA4/K4FcrlcaDR+bAYPoebL+1qwWB1885KJ78oEEueg3cXGp6t4
      6uYSMl7fiOvr2+S/cl40VW37Ye//IF33iF9jBRtrTGoeegFN7Vu4NjwJOt9mIsHE6ZFtWe0u
      HLYObLZszKYEejpOozEmk5luZsDmwqS2g2Eag5ZGMgvmYTKZ4u45wTcuzufGJ3Zx16oin3Zk
      +Rvn7/9+nG9fWkLmlGlQejnamjdg7g3eNff8AVb/WH7CSxDE0vN3A9ZctBESM9C+dDt87Y/y
      ZptgNb2dd+4/0pMTsQ476bD0YDYlkJo1jRVZYxVj+dnJOIbQatTcsTyfrTsbuHdNaUi1DzR1
      09I9yM+uqZBfWPYtePZGuVhONc5t0O4GGLZC1oyQxhLXlK8HYwo8e5NcQpHovaY/GDy+lcLS
      cmbPnk1hXnxUIAbKV+bn8O7RdvqHHCHTtDvdPPhmNQ+cW+6QkCbvHT76t/FP3PUorLg3ZHFM
      GiLUeiUmH5ARbrQaNXetKmLrzoaQaf7hkzpuXJRHdrLnnlNWfAf2jLOja6gHztZC8eqQxTGp
      mHrRF61X2j8LyxCKNADA9fOm81HNWfpswV8F6jsG2NvQxS1Lxqj09LZ3eM+TsPDOoMef1Iy0
      Xnnju9C4I+TyijWAWq3i7lVFPPWPU0HpuN0SP3vtCD+/pmL8R4yuvA92Peb52kjZw+wNQY2v
      CEZar3zysNwkIIQo1gAAV8+dxo6TnUFdBf5c1czKkkzKsr2Uj5gy5KtA7d+/eO3oqzDnBmWU
      PYQCY6rcdWL/syFtvaJoA6jVKjZdHPhV4HSvjb8daOUbX/Jh48rK++Q6f5DLHvZsgQV3BDSu
      YtGZ5OlQqFqvDPVE/0nx0Wb93Gls3dHAP13sGLvVhxd+8Xo1P1o/07c9x6YM+Xm+J9+X7/cX
      rFJe2UMoOLf1yns/hy8/MPE5kht6m6HtAJw5Ch21YLWA3uy5EhwIsdoVwh/ePdrOweYefnDl
      TJ81tx0+TVVDF/9+7WzfBxo4g+vFr6MxJsI1v4eUADZxj0OsfaYR0fzkYehrwXnFQ2j1n999
      sw/A2WNyw972w9B5AuyDkDkDps6F7NmQPWf0CTuKvwIArJs9lc3b6+my2kk3T9zapM/mYPP2
      ep67Z5l/AyVmo8mZD4PdIf3lVyyrvw+7N6N58Ta5c95AB+jN8i955gxYfI/8/17yLK9XALtt
      gJazvWSnJdDWOcCUFCMYkrH1dpA+NRe9RjUprgAgdxOrrLfw4/WzJtT86auHWTsrmzUzp/gf
      p30ILW7Qh7Y7VCx+phHTbD+G1pwOSf6vGHuNZNjhwtLcQGubm8LCco7XNYDKheR00HK2j8UL
      /Lj8xzhrZk5h86f1dA4Mk5loGPe4ynoL/UPOgH75AXkOG4b6GkWTWRbwZ+r1LPewFW1aFgWJ
      RprqT6DXeSaJkXpOcKQ0v3FxIX/46CQ/vqp8TE2b3cVv363l8Vvn+/2eQxlnpHSVoOndACo1
      elykpCShNpSTpHOPToHSpuZi+HwKFE/VoN64bNZUnvxHA902J1mfdzg7V/Px905y8+I8soJs
      bhmO9x4u3cmu6fX+XVrmVGbPnkVKahq5UzNJyZhCSqKRqTl5GDTjrHrGOd+6pJjHP6674PXq
      tl6Otfdx0+L4eX6aYGIUvRA2FqvLp1DT3s+ZvqHR19xuiQferPa9sZUgbhAGGIN7Ly3l9x+c
      GP330ztOsXZWtm+NrQRxhTDAGFxclkmjxUpbj220sZXPD7QQxBXiftw43HdZGY99XIfF6vC9
      sZUg7hDf6jgsL86gqXvIv8ZWgrhDXAG88Ngt80g1Gyc+UBC3iCuAF5ITdONvchFMCoQBBIpG
      GECgaLzmAF1n22g43U1edipdVicmtUN+TrClhYyCCjLP74AgEMQZXg2QPmU6dcfrOeEYwgAM
      IIGqA9AzcKKGzEXzIxOlQBAmvBqg4dh+zg66yTa46LO5SFAPf/6k+CYyCxZMumrQeNUMl64S
      NMWWyEmgGS5dJWiKJFigaIQBBIpGGECgaIQBBIpGGECgaIQBBIpGGECgaIQBBIpGGECgaIQB
      BIrGe2tEay/vbN9DflYSpvTpdLXVf14L1ExmwXwumlkQqTgFgrDg1QAGcwpT0pJITU2npr6O
      rNRkUA2TkpmLw9qN1ZopiuFiQDNcukrQnLCCKDc3Fw1O8nLzSDJIqAwpDFqaySiYidlsnFSt
      EeNZM1y6k13TJwMAeDw5eHqAnZEFghhDJMECRSMMIFA0wgACRSMMIFA0wgACRSMMIFA0wgAC
      RSMMIFA0wgACRTPBSrBEXf0pUkwGLKI1omASMkE1aB8nG5rJTE4ERGtEweRjwmrQFJMBncqF
      xSpaI8aqZrh0laApWiNOAs1w6SpBUyTBAkUjDCBQNMIAAkUjDCBQNMIAAkUjDCBQNMIAAkUj
      DCBQNMIAAkUjDCBQND6tHx/cWylaIwomJT4ZQLRGjG3NcOkqQdMnAxiMetEaMcY1w6U72TV9
      OmtabqFojSiYlIgkWKBohAEEikYYQKBohAEEikYYQKBohAEEikYYQKBoAjJA7eH9dPYNhToW
      gSDiBGAAOwN2icYTNaGPRiCIMAEYQEtvZzM6c1rooxEIIkwABRRqLrviK6GPRCCIAqOd4axW
      a8QGHR4exmAwCM0Y11WC5v8HWAKoTai9f8QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Con Ads - Negative Tweets' width='192'>
      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
      SmAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ads-Tweets' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sentiment-Markets' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tweets-Markets' width='192'>
      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
      6PCpKwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trump Bot Tweets- Markets' width='192'>
      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
      1Oz9oP8fGdWdmILU+tUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hillary Bot Tweets - Markets' width='192'>
      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
      1aq3mv0g6P8HRTEu/S1zR9YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Candidate-Bots' width='192'>
      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
      8guoXrOG82fPUpiSFCXnd41PcFs0YLVYWBgb4elqOUJU0OkQdDpCoTAmkxG9fvGI70S7A51O
      R3ZGBqtKS3jj6FE+/OijCIJAZkoKpXYrOUmJKmdpKCuhrKCA6vIypmbnuHXzOjvXrUUQBCpy
      czjV3MJXm5p4dOcOVpaUYjIaefXIUcxmEwPDwzy/aweJNis6Qcea8jJee+cU2+rrmZiZZWxo
      iIyUFKrKyyjJz+ftU3ZK9BKJdtnXYjOb2Vheyh98/VvUlpaQlpTI/qFxdj32JKvXrv01r/gv
      Bvc9AdTW1vL6xfOkBQLsqCijvbeP6pISBARMBiNmkxFJkpMzDHo9toREGgqycZjNKKEQ/mCQ
      s5cvodcbwGhki3qMSgxIKg9BAoZGx7CbjEy6faoYdOpOJy5HEo1bNmExmzl86CCn73bhFXSY
      LBaGXG4aIoXDYVn0kCTlvQcCoWCQ5MQEyvLzuHzzJnVVq/C43WypLFPNr8NT04y53FjM8nvN
      rrS28sDq6qhkley0NPKmpunqH+BOdy+pyUmMTE7y+88+g81q4evff5HddWtxuj3c6uvnwcYt
      ZKenkZORwdqVK7jb18+drm4mZ2fpHx6iZMN6vn/iFLtrq8lLTWXf2fMkJydztv02/+P/+BN6
      5p3s2r3717vYvwTc9wQgCALPfvaP+NZf/TdKTTpaJ2dIS0wiJz0NCYkch423Tr7Dk7t3IUoS
      7oE+DjZf4tnnnsMYsUebjEZ218ghw6fudr9Li7J4Mz4xAUBrRycbcjNVcScjwUFyYQnmSMrg
      3r2Pqs/tf+tN9HoDZrN8bKI5QoSq3iBFjncXBBrXrWVsapqjTedxmEzMuz14A366R8eZ8AXI
      yi/g0vXrrFm5EpNeh9W8+JK/613duEJh/JLAR3fuYM7lItHhYGpmFlvEClNaXEJabh5ZegP6
      BIWzyNxo1unkZmcX7T097NmyhaLcXApycriZnMrfHzyKKRTkaHMrXq+P4rIy3AsLWGzvTSfr
      fZ8TrEDJ9l185dAJGrIyuNHRgSRJjE5NMznv5G5XN+1d3TS3t1M+2s92k8D59tuLse3EWHzi
      hJZLkfgi5XuOQWCb3cgfbljD+sJ8tVx1Xg4915sX380V+Q9BICnoI8ti0lbKopgVOWlCkx+Q
      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
    </thumbnail>
  </thumbnails>
</workbook>
